import streamlit as st
from openai import OpenAI
import os
from dotenv import load_dotenv

# Load environment variables
load_dotenv()

# Get API key from environment variables
#api_key = os.getenv("OPENROUTER_API_KEY")
api_key="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"
if not api_key:
    st.error("No OpenRouter API key found. Please add it to your .env file as OPENROUTER_API_KEY=your_api_key_here")
    st.stop()

# Initialize OpenAI client with OpenRouter configuration
client = OpenAI(
    base_url="https://openrouter.ai/api/v1",
    api_key=api_key,
   
)

def get_accounting_advice(transaction_description):
    response = client.chat.completions.create(
        model="google/gemini-2.0-pro-exp-02-05:free",  # Corrected model identifier for OpenRouter
        messages=[
            {"role": "user", "content": f"""Som en mycket erfaren svensk revisor och redovisningskonsult, f칬rklara detaljerat hur f칬ljande transaktion ska bokf칬ras enligt svensk redovisningssed och skattelagstiftning:

            Transaktion: {transaction_description}

            Input 칛r beskrivningen av transaktionen som 칛r skriven p친 svenska.
            
            Analysera mycket noggrant:
            - Transaktionens natur (ink칬p eller f칬rs칛ljning)
            - Momsskyldighet och korrekt momssats (25%, 12%, 6% eller 0%)
            - Vid f칬rs칛ljning: Utg친ende moms (debit) ska visas i kreditkolumnen
            - Vid ink칬p: Ing친ende moms (kredit) ska visas i debitkolumnen
            - Korrekt momsredovisning enligt svenska regler
            
            Visa bokf칬ringen tydligt i f칬ljande format:

            1. Bokf칬ringstabell:
            | Debetkonto (nr och namn) | Debet belopp | Kreditkonto (nr och namn) | Kredit belopp |
            |--------------------------|--------------|---------------------------|---------------|
            | [Kontonr] [Kontonamn]   | [Belopp]    | [Kontonr] [Kontonamn]    | [Belopp]     |

            VIKTIGT: Vid f칬rs칛ljning/int칛kt ska utg친ende moms (konto 2610-2630) visas i kreditkolumnen.
            Vid ink칬p/kostnad ska ing친ende moms (konto 2640-2650) visas i debitkolumnen.
            En transaktion kan aldig ha ALDRIG ha b친de ing친ende och utg친ende moms samtidigt.
            VIKTIGT: Var extra noga med att tabellen 칛r helt korrekt och att momsen hanteras p친 r칛tt s칛tt.
            Debet och kredit ska vara korrekt placerade f칬r att bokf칬ringen ska vara r칛tt.
            Om samma kontonummer f칬rekommer flera g친nger i samma kolumn ska beloppen summeras och bara visas en g친ng. 
            Totalt belopp i kreditkolumnen och totalt belopp i debetkolumnen ska vara lika om konteringen 칛r korrekt.

            2. Utf칬rlig f칬rklaring:
            - Beskriv bokf칬ringen och varf칬r specifika konton anv칛nds
            - F칬rklara exakt hur momsen ska hanteras och varf칬r
            - Redog칬r f칬r eventuella momssatser som 칛r till칛mpliga
            - Redovisa s칛rskilda redovisnings- eller momsregler som 칛r relevanta

            3. Viktiga tips:
            - Detaljera viktiga aspekter enligt svenska redovisningsstandarder
            - P친peka eventuella vanliga fel eller missf칬rst친nd
            - Ge konkreta r친d om vilken dokumentation som kr칛vs

            Anv칛nd alltid konton fr친n den svenska BAS-kontoplanen och ange alltid b친de kontonummer och kontonamn.
            Var s칛rskilt noggrann med att f칬lja svensk bokf칬ringslag och momslagstiftning. Var ocks친 noga med korrekt svenskt spr친k i svaret."""}
        ]
    )
    return response.choices[0].message.content

def main():
    # Set page configuration
    st.set_page_config(
        page_title="Bokf칬ringshj칛lpen",
        page_icon="游늵",
        layout="wide"
    )
    
    # Custom CSS
    st.markdown("""
    <style>
        .main {
            background-color: #f7fafc;
            background-image: linear-gradient(45deg, #f7fafc 25%, #edf2f7 25%, #edf2f7 50%, #f7fafc 50%, #f7fafc 75%, #edf2f7 75%, #edf2f7 100%);
            background-size: 56.57px 56.57px;
        }
        .container {
            max-width: 60%;
            margin: 0 auto;
        }
        h1 {
            color: #2b6cb0;
            text-align: center;
        }
        .stButton>button {
            background: linear-gradient(45deg, #2b6cb0, #48bb78);
            color: white;
            border-radius: 25px;
            padding: 0.5em 1em;
            font-size: 1.1em;
        }
        .stButton>button:hover {
            transform: translateY(-2px);
            box-shadow: 0 4px 6px rgba(0, 0, 0, 0.2);
        }
        div[data-testid="stHorizontalBlock"] {
            gap: 1rem;
        }
        .advice-container {
            margin-top: 2rem;
            padding: 1.5rem;
            background-color: #f8fafc;
            border-radius: 10px;
            border-left: 4px solid #2b6cb0;
        }
    </style>
    """, unsafe_allow_html=True)
    
    # Create a container with 60% width
    st.markdown('<div class="container">', unsafe_allow_html=True)
    
    # Header
    st.title("Bokf칬ringshj칛lpen")
    st.markdown("<p style='text-align: center;'>F친 AI-assisterad v칛gledning f칬r din bokf칬ring</p>", unsafe_allow_html=True)
    
    # Input section
    st.subheader("Beskriv transaktionen s친 noggrant som m칬jligt, f칬r b칛sta resultat")
    transaction = st.text_area("Transaktionsbeskrivning", placeholder="Exempel: S친lt tj칛nster f칬r 10 000 kr + moms till ett svenskt f칬retag", height=150)
    
    # Buttons in two columns
    col1, col2 = st.columns([1, 1])
    with col1:
        advice_button = st.button("F친 bokf칬ringshj칛lp", type="primary", use_container_width=True)
    with col2:
        clear_button = st.button("Rensa", type="secondary", use_container_width=True)
    
    # Get advice functionality
    if advice_button and transaction.strip():
        with st.spinner("Analyserar transaktion..."):
            advice = get_accounting_advice(transaction)
            st.session_state.advice = advice
            st.rerun()
    elif advice_button and not transaction.strip():
        st.error("V칛nligen beskriv transaktionen")
    
    # Show result section below buttons
    if 'advice' in st.session_state:
        st.markdown("<div class='advice-container'>", unsafe_allow_html=True)
        st.subheader("Bokf칬ringsf칬rslag")
        st.markdown(st.session_state.advice)
        st.markdown("</div>", unsafe_allow_html=True)
        
    # Clear functionality
    if clear_button:
        if 'advice' in st.session_state:
            del st.session_state.advice
        st.rerun()
    
    # Disclaimer
    st.markdown("""
    <div style='background-color: #fff5f5; padding: 15px; border-radius: 8px; border-left: 4px solid #fc8181; margin-top: 20px;'>
        <h3>丘멆잺 Viktig information</h3>
        <p>Detta 칛r en AI-genererad v칛gledning och ska endast anv칛ndas som hj칛lpmedel. 
        Konsultera alltid en auktoriserad revisor eller bokf칬ringsexpert f칬r specifika bokf칬ringsfr친gor.</p>
        <p>Alla f칬rslag b칬r verifieras mot aktuella bokf칬ringsregler och BAS-kontoplanen.</p>
    </div>
    """, unsafe_allow_html=True)
    
    # Close the container div
    st.markdown('</div>', unsafe_allow_html=True)

if __name__ == "__main__":
    main()
